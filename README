MICROSOFT

PLEASE BEGIN TO GIVE A SHIT ABOUT CODING QUALITY
CODING STYLE
INTENT OF THE USER 
VISUAL AESTHETICS

I don't even know where to begin with this.

For a basic example this is some of the worst code I have ever seen.

It is ridiculous to think this is fine.

If this is what microsoft codebases look like please fix it

Can't even begin to read and understand the code because there is so much text slammed right next to it

Do not use syntax highlighting as a justification for not fixing  because it was still totally unintelligable on the page I found with highlighting

Still can't even give any feedback on the content of the code because I still can't read any of it

ALL I WANT TO DO IS WRITE A TEXT FILE

It should be 3 or 4 lines of code.

Compared to other languages the community of other blog posts is so small it's usually all in on the microsoft docs.

If you can not write adequate documentation that allows developers to get things done (I NEED TO WRITE A TEXT FILE) please end of life your languages for commercial or open source use.

PLEASE

Go review this page please: https://gobyexample.com/writing-files

Notice how many pr few the garbage mouth sound writing words for people versus operative code for computer to understand the business, process, ops or other intent

SEO might be different from me, but go search "write a text file golang" and review the aesthetics, code content, author, and source (official vs community)

Go download golang. Write a text file.

Now let's start over for MICROSOFT's platform.

BTW: Forgot to mention. For any and all of these exercises DO NOT USE BING. ARE YOU JOKING ON ME?

I know it's tough inthe bubble, but live every moment of your life such that  you can avoid ever using BING if at all possible. For that undeniable life hack there is no charge, but please stay with me.

Now let's write a text file in dotnet... OH WAIT! THAT DOESN'T MAKE ANY SENSE! 

I get it. DOTNET is a great brand word thing to use on product. If used on too much product it becomes meaningless, confusing, and becomes a friction on the developer experience.

OK we aren't even talking on that just sayin get your shit together or please stop doing so many things (and calling them all the same name).

How are we supposed to particpate in an ecosystem with such blatant disreguard for the human rights style side of the equation.

There are men, women, and robots using product to give value to company, self, self company, world, or similar.

These little things matter way way way more than the fancy stuff.

Once the little things are taken care of the runway is clear to begin to investigate the idea of endeavor in process of FLYING THE FUCKING PLANE.

But for now it feels like there are warp jets all on the runway looking cool ready to teleport to mars, but oh wait we forgot that actually the runway is located at the bottom of the ocean...

Which should be fine because the jet suits, warp jets, and all are waterproof, but the instructions for how to get into jet with the water everywhere (just push close button and it will drain)

Or maybe that instruction is there it's just so hard to find on the suit HUD readout because its together with so many other 16384 lines of warp jet instruction that the pilots are stuck on the runway and it's probably fine but they are beginning to hear din to roar of the formation of some local crustacean war party.

Ok I give up.

Do whatever you want.
 
Ok maybe a little more feedback on the original complaint:

Don't try to explain how to add poison to the razor net deploy functionality of the robo parachutes in the code examples next what should again be like 4 lines of code.

That info is great but it is for the blog post part of the documentaiton not the literal code snipped that I was really hoping to just copy and paste an hour ago before I fell into the madness that can only be induced by exposure to MICROSOFT documentation.

Don't be lazy. Tell em how to do the poison on the razor nets, just put it lower down the page and you will have to have an smaller 1 -3 line code snippet or whatever (except im so confused by the performance below that now im just in a hopeless morass of bossy indignation that the inclusion of secondary shorter code snippet might not even make sense)

... 66 lines

66

not 4

not 2

not 8

not 16

66

P.S.

We aim for solid communication in feedback. I know sometimes turn of phrase may becoming exotic. If ever any of this docunent which does not consitite the included microsoft documentation example is confusing because of the choice of words please try to clarify by replacing suspect phrase with DUMPSTER FIRE and re-read. If still not make sense repeat if such operation would meaningly impact the document and try read again. If still no then just go try to find out how to write a text file in rust and then no matter how that goes easy hard or otherwise let it be a source of power and control in how you frame the experience and process of discovery consumption incorporation evaluation and or any relevant process step involved in bringng you to this place in my document which I write for you with love.

and one more thing

MICROSOFT TEXT EDITOR and or DEVELOPER ENVIRONMENT COPY AND PASTE MADNESS

We finally find the 2 or 4 lines of code we need. We get into VS(I DON'T LIKE TO HAVE SEPARATE NAMES FOR TOTALLY DIFFERENT PRODUCTS) - seriously its like if I had a pet scorpion named scorpion and a giant robot scorpion called scorpion(*sting*) and then somehow I usually take the pet scorpion on missions inside of the scorpion sting bue hes actually at the local medic station and the scorpion sting doesnt actually have a stinger. I dunno nevermind on that one. just saying it is a bad move to try to use the open source thing that is better in a lot of ways (although totally understandably not the same product) again SHOULD NOT BE USED AS SOME KIND OF BRANDING AD CAMPAIGN FOR THE PAID VERSION. if you want my advice maybe just call VS code VS code... thats a good one everybody likes works good a lot of the time... the purple one switch to the name DUMPSTER FIRE - that way when mind is using product can think of oh.... do i need code or dumpster fire right now?>??? maybe can help all involved.

ok let's finish the hopfully ultimate grievance for this missive:

NOTHING SELECTED

CTRL C

PASTE BOARD DELETED

WHAT THE FUCK

WHO EVER WANTED THAT FEATURE?

WHO EVER ALLOWED THAT DECISION TO PERSIST AS THE STANDARD?

WHO THE FUCK HAS EVER INTENTIONALLY DONE AN ACTION TO DELETE THE PASTEBOARD?

IF THAT IS PART OF SOME WORKFLOW (OMG I BET IT'S SOME ASSHOLE FROM EXCEL LAND RESPONSIBLE FOR HIS) THAT WORKFLOW NEEDS TO BE DEPRECATED

THIS NEEDS TO BE FIXED AT SOME POINT.

PLEASE NAME 1, 2, or 3 (ideally popular but let's see whatcha got) computer based products (ideally involving text manipulation on some level so it's vaguely apples on apples (iduna etc)) and please confidently list those products that have made the same

TERRIBLE ASS PRODUCT DECISON that for some reason someone haas proclaimed that when there is no paste board selection either what the user really wants to do is actually delete the thing that they were about to paste from the paste board, or perhaps no that this is necessarily his or her intent, but perhaps the expunging of the data associated with the ability for that user to paste said data is on some level the proper correct product funct

OK OK

so gotta wrap it up. There are a few more specific parts of the code that are criticizable once the comments are gone like why have an extra line talking about classes with a long string concat

and IMO more importantly why the conditional in the loop to not write one of the lines? Trying to teach general programming concepts like string comparison and if else statements inside the writing a text file code?

Please focus.

Delete the comments so one might read the code

Upon reading consider the usefulness of each line in terms of the relation to the goal of the consuming user of the docs.

So all of that to say...

I was expecting to find something like this:

```
        string[] lines = { "First line", "Second line", "Third line" };
        System.IO.File.WriteAllLines(@"C:\Users\Public\TestFolder\WriteLines.txt", lines);

        string text = "Would it would help anyone to show a string concat of 1 long lines here?";
        System.IO.File.WriteAllText(@"C:\Users\Public\TestFolder\WriteText.txt", text);

        using (System.IO.StreamWriter file = new System.IO.StreamWriter(@"C:\Users\Public\TestFolder\WriteLines1.txt"))
        {
            foreach (string line in lines)
            {
                    file.WriteLine(line);
            }
        }

        using (System.IO.StreamWriter file = new System.IO.StreamWriter(@"C:\Users\Public\TestFolder\WriteLines1.txt", true))
        {
            file.WriteLine("Fourth line");
        }
```
But...

Instead I found this:

(66 lines)

17 lines to show what the output of the program is... the program that is about writing text files... not reading them

17 lines is longer than the whole "fixed" version above.

In so far as I have any power to do so I hereby grant as such a perpetual transferable irrevokavle grant of any and all privileges both real, intillectual, or otherwise and also any and all compatible similar patents in the same corresponding processies therefore any and all parties may for any purpose use any part, piece, element, sectio, conept, character or otherwise except for any microsoft originated code which is likely licensed in a different regeinme and such corresponding license agreements should be sought and understood using any relevant advice or council which is suitable as such. This and any continuted granting of rights, permissions, licenses, or any simiar concept are done so with the express understanding that engaging in any processies are endeavored at own risk and as such no warranty could possibly ever by given promissed implied or similar by transmitting party except if in such a situation where such a construct has been determined to be unlawful. Having understood the pevious as a very permissive granting of intillectual property the one caveat on the prior expression is no parties have any privileges to use any unque turn of phrase herein to create an entirely new spoken language for the express purpose of licensing its use.

I love you.

Fire all your staff and start over.

None of this is advice. Seek reasonable advisors in any matters which may reasonably benefit from such.

https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/file-system/how-to-write-to-a-text-file
```
class WriteTextFile
{
    static void Main()
    {

        // These examples assume a "C:\Users\Public\TestFolder" folder on your machine.
        // You can modify the path if necessary.

        // Example #1: Write an array of strings to a file.
        // Create a string array that consists of three lines.
        string[] lines = { "First line", "Second line", "Third line" };
        // WriteAllLines creates a file, writes a collection of strings to the file,
        // and then closes the file.  You do NOT need to call Flush() or Close().
        System.IO.File.WriteAllLines(@"C:\Users\Public\TestFolder\WriteLines.txt", lines);

        // Example #2: Write one string to a text file.
        string text = "A class is the most powerful data type in C#. Like a structure, " +
                       "a class defines the data and behavior of the data type. ";
        // WriteAllText creates a file, writes the specified string to the file,
        // and then closes the file.    You do NOT need to call Flush() or Close().
        System.IO.File.WriteAllText(@"C:\Users\Public\TestFolder\WriteText.txt", text);

        // Example #3: Write only some strings in an array to a file.
        // The using statement automatically flushes AND CLOSES the stream and calls
        // IDisposable.Dispose on the stream object.
        // NOTE: do not use FileStream for text files because it writes bytes, but StreamWriter
        // encodes the output as text.
        using (System.IO.StreamWriter file =
            new System.IO.StreamWriter(@"C:\Users\Public\TestFolder\WriteLines2.txt"))
        {
            foreach (string line in lines)
            {
                // If the line doesn't contain the word 'Second', write the line to the file.
                if (!line.Contains("Second"))
                {
                    file.WriteLine(line);
                }
            }
        }

        // Example #4: Append new text to an existing file.
        // The using statement automatically flushes AND CLOSES the stream and calls
        // IDisposable.Dispose on the stream object.
        using (System.IO.StreamWriter file =
            new System.IO.StreamWriter(@"C:\Users\Public\TestFolder\WriteLines2.txt", true))
        {
            file.WriteLine("Fourth line");
        }
    }
}
 //Output (to WriteLines.txt):
 //   First line
 //   Second line
 //   Third line

 //Output (to WriteText.txt):
 //   A class is the most powerful data type in C#. Like a structure, a class defines the data and behavior of the data type.

 //Output to WriteLines2.txt after Example #3:
 //   First line
 //   Third line

 //Output to WriteLines2.txt after Example #4:
 //   First line
 //   Third line
 //   Fourth line
```
